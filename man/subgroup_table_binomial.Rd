% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subgroup_table.R
\name{subgroup_table_binomial}
\alias{subgroup_table_binomial}
\title{Generate a tibble meant for a forest plot describing subgroup analyses}
\usage{
subgroup_table_binomial(
  data,
  formula_overall = NULL,
  formulas,
  formulas_subgroups,
  group,
  outcome,
  outcome_positive,
  OR_interact = FALSE
)
}
\arguments{
\item{data}{a data frame containing individual data of the study population.}

\item{formula_overall}{a string specifying a formula for a binary logistic.
regression model of the overall treatment effect (usually without subgroup covariates).
This overall formula is only necessary if \code{OR_interact = FALSE}.}

\item{formulas}{a named list of strings specifying formulas for binary logistic
regression models of the overall treatment effect adjusted for subgroup levels
including an interaction term between treatment group and subgroup variable.
These models are used for calculating the p-value of the interaction. The list
entries must be named by the subgroup variable names.}

\item{formulas_subgroups}{a named list of strings specifying formulas for binary logistic
regression models of the overall treatment effect (usually without subgroup covariates).
These models are used for calculating the odds ratios and its 95\% confidence
intervals within each subgroup stratum. The list entries must be named by the
subgroup variable names. This parameter is only necessary if
\code{OR_interact = false}.}

\item{group}{a string specifying the name of the treatment group variable in
\code{data}. The group variable must be a factor.}

\item{outcome}{a string specifying the name of the outcome variable in \code{data}.
The outcome variable must be a factor.}

\item{outcome_positive}{a string specifying the name favourable outcome level.}

\item{OR_interact}{a string specifying whether you want to calculate the odds
ratio of the treatment groups effects in the subgroup strata (\code{OR_interact = FALSE} with
models for odds ratio supplied by \code{formulas_subgroups}) or the odds ratios
ratio of the interaction terms (\code{OR_interact = TRUE} with
models for odds ratio supplied by \code{formulas}).}
}
\value{
A tibble ready for input into \code{forestplot::forestplot()}.
}
\description{
This function performs data preparation for subgroup analyses using a forest
plot. The goal is to describe a binary outcome in two treatment groups
stratified by pre-specified subgroups with three different data:
\itemize{
\item absolute and relative frequencies of favorable outcomes in each subgroup
stratum grouped by treatment group,
\item odds ratios and 95\% confidence intervals of the treatment group effect
calculated on each subgroup stratum separately by binary logistic regression
models (\code{glm(family=binomial)}) of the outcome, and
\item a p-value of the interaction between the subgroup and the treatment group
as calculated by a type III ANOVA on the binary logistic regression model
on the full study population.
}
}
\examples{
library(dplyr)

# Data preparation
data(knee, package="catdata")

knee \%>\% mutate(Th = factor(Th),
                Sex = factor(Sex, levels = c(0, 1), labels = c("male", "female")),
                Age = cut(Age, breaks = c(min(Age), 30, 40, max(Age)), include.lowest = TRUE),
                R4_improved = factor(if_else(R4 < R1, 1, 0), levels = c(0, 1), labels = c("no", "yes"))) ->
  knee
formula_overall = "R4_improved ~ Th + R1"

# Generate table
knee \%>\%
  subgroup_table_binomial(data = .,
                          formula_overall,
                          formulas = list(
                            Sex = "R4_improved ~ Th*Sex + R1",
                            Age = "R4_improved ~ Th*Age + R1"
                          ),
                          formulas_subgroups = list(
                            Sex = formula_overall,
                            Age = formula_overall
                          ),
                          group = "Th",
                          outcome = "R4_improved",
                          outcome_positive = "yes") ->
  res

# Add a header
header <- tibble(subgroup = c("", "", "Subgroup"),
                 group1 = c("Improvement", "after ten days", "of placebo"),
                 group2 = c("Improvement", "after ten days", "of treatment"),
                 OR = c("", "Odds ratio", "[95\% CI]"),
                 summary = TRUE,
                 p = c("", "", "p"))
res <- bind_rows(header,
                 res)

# Visualize using forestplot
library(forestplot)
res \%>\%
  forestplot(labeltext = c(subgroup, group1, group2, OR, p),
             align = c("l", "r", "r", "r", "c"),
             is.summary = summary,
             graph.pos = ncol(.) - 4,
             hrzl_lines = TRUE,
             clip = c(1/sqrt(2)^7, 64),
             xlab = "Odds ratio (95\% CI)",
             graphwidth = unit(50, "mm"),
             colgap = unit(2, "mm"),
             lineheight = unit(4.5, "mm"),
             line.margin = unit(0.7, "mm"),
             xlog = TRUE,
             col = fpColors(box = "royalblue",
                            line = "darkblue",
                            summary = "royalblue"),
             ci.vertices = TRUE,
             txt_gp = fpTxtGp(summary = gpar(fontsize = 8.7, cex=1),
                              label = gpar(fontsize = 7.7, cex=1),
                              xlab = gpar(fontsize = 7.7, cex=0.8),
                              ticks =gpar(fontsize = 7.7, cex=0.8))) ->
  plot
plot
## Not run:
library(Cairo)
Cairo::CairoPNG("knee.png", width = 500, height = 300, units="pt", dpi=310)
plot
dev.off()
## End(**Not run**)
}
